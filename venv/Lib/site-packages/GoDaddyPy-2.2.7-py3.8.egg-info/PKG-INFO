Metadata-Version: 1.1
Name: GoDaddyPy
Version: 2.2.7
Summary: A very simple python client used to update the IP address in A records for GoDaddy managed domains.
Home-page: https://github.com/eXamadeus/godaddypy
Author: Julian Coy
Author-email: julian.calvin.coy@gmail.com
License: UNKNOWN
Description: |travis| |climate|
        
        .. |travis| image:: https://travis-ci.org/eXamadeus/godaddypy.svg?branch=master
            :target: https://travis-ci.org/eXamadeus/godaddypy
        .. |climate| image:: https://codeclimate.com/github/eXamadeus/godaddypy/badges/gpa.svg
            :target: https://codeclimate.com/github/eXamadeus/godaddypy
        
        GoDaddyPy
        ==========
        Python library useful for updating DNS settings through the GoDaddy v1 API.
        
        Source located @ https://github.com/eXamadeus/godaddypy
        
        This concept was spawned from observerss' pygodaddy @ https://github.com/observerss/pygodaddy.
        
        Setup
        --------
        
        First, go to https://developer.godaddy.com/keys/ and request a production API key and secret.
        
        *Note: Sometimes the production API keys don't seem to work correctly.  Just delete it and request another one.*
        
        Second, install GoDaddyPy with pip.
        
        .. code-block:: bash
        
            $ pip install godaddypy
        
        ..
        
        Examples
        --------
        
        .. code-block:: python
        
            >>> from godaddypy import Client, Account
            >>>
            >>> my_acct = Account(api_key='PUBLIC_KEY', api_secret='SECRET_KEY')
            >>> delegate_acct = Account(api_key='PUBLIC_KEY', api_secret='SECRET_KEY', delegate='DELEGATE_ID')
            >>> client = Client(my_acct)
            >>> delegate_client = Client(delegate_acct)
            >>>
            >>> client.get_domains()
            ['domain1.example', 'domain2.example']
            >>>
            >>> client.get_records('domain1.example', record_type='A')
            [{'name': 'dynamic', 'ttl': 3600, 'data': '1.1.1.1', 'type': 'A'}]
            >>>
            >>> client.update_ip('2.2.2.2', domains=['domain1.example'])
            True
            >>>
            >>> client.get_records('domain1.example')
            [{'name': 'dynamic', 'ttl': 3600, 'data': '2.2.2.2', 'type': 'A'}, {'name': 'dynamic', 'ttl': 3600, 'data': '::1',
            'type': 'AAAA'},]
            >>>
            >>> client.get_records('apple.com', record_type='A', name='@')
            [{u'data': u'1.2.3.4', u'type': u'A', u'name': u'@', u'ttl': 3600}]
            >>>
            >>> client.update_record_ip('3.3.3.3', 'domain1.example', 'dynamic', 'A')
            True
            >>>
            >>> client.add_record('apple.com', {'data':'1.2.3.4','name':'test','ttl':3600, 'type':'A'})
            True
            >>>
            >>> client.delete_records('apple.com', name='test')
            True
        ..
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Topic :: Internet :: Name Service (DNS)
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
